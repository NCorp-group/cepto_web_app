{"remainingRequest":"/home/jens/repos/cepto_web_app/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/jens/repos/cepto_web_app/src/components/Table.vue?vue&type=style&index=0&id=783f90ce&lang=css","dependencies":[{"path":"/home/jens/repos/cepto_web_app/src/components/Table.vue","mtime":1620580597300},{"path":"/home/jens/repos/cepto_web_app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jens/repos/cepto_web_app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/home/jens/repos/cepto_web_app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jens/repos/cepto_web_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jens/repos/cepto_web_app/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiN0YWJsZSB7CiAgaGVpZ2h0OiAxMDAlOwogIGZsZXgtZ3JvdzogMjsKICBwYWRkaW5nOiAwcHggMjAwcHg7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBjb2xvcjogI0Y2RjZGNjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbWFyZ2luLWxlZnQ6IDIwMHB4Owp9CmJ1dHRvbiB7CiAgbWFyZ2luOiAzMHB4IDEwcHggMjBweCAwcHg7CiAgcGFkZGluZzogMTBweCAxNXB4OwogIGJvcmRlci1zdHlsZTogbm9uZTsKfQp0YWJsZSA+IHRkIHsKICBwYWRkaW5nOiA1cHg7Cn0K"},{"version":3,"sources":["/home/jens/repos/cepto_web_app/src/components/Table.vue"],"names":[],"mappings":";AAmOA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACd","file":"/home/jens/repos/cepto_web_app/src/components/Table.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"table\" class=\"container\">\n    <h1>Patient Name</h1>\n    <h4>Event Logs</h4>\n    <button type=\"button\" @click=\"on_refresh\" class=\"btn btn-dark\">\n      Refresh\n    </button>\n    <button type=\"button\" @click=\"on_log\" class=\"btn btn-dark\">\n      Print API data\n    </button>\n    <table class=\"table mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">VisitID</th>\n          <th scope=\"col\">EventID</th>\n          <th scope=\"col\">Event Type</th>\n          <th scope=\"col\">Date</th>\n          <th scope=\"col\">Timestamp</th>\n          <th scope=\"col\">Time since last event</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(visit, i) in visits\" :key=\"i\">\n          <th scope=\"row\">{{ visits.length - i++ }}</th>\n          <tbody>\n            <tr v-for=\"(event, j) in visits[i].events\" :key=\"j\">\n              <th scope=\"row\">{{ visits[i].events.length - i++ }}</th>\n              <td>{{ event.type }}</td>\n              <td>{{ event.datetime.toLocaleDateString('da-DK') }}</td>\n              <td>{{ event.datetime.toLocaleDateString('da-DK') }}</td>\n              <td>{{ event.time_since_last }}</td>\n            </tr>\n          </tbody>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n//import Visit from 'visit.js'\n//import Event from 'event.js'\n\nclass Visit {\n  constructor(state, visit_id, datetime, desc, duration, events) {\n      this.state = state;\n      this.visit_id = visit_id;\n      this.datetime = datetime;\n      this.desc = desc;\n      this.duration = duration;\n      this.events = events;\n  }\n}\n\nclass Event {\n  constructor(type, datetime, time_since_last) {\n      this.type = type;\n      this.datetime = datetime;\n      this.time_since_last = time_since_last;\n  }\n}\n\nexport default {\n  name: \"event-table\",\n  data: () => ({ visits: [], api_data: null }),\n  methods: {\n    on_log() {\n      console.log(this.api_data);\n    },\n    on_refresh() {\n      //this.clear_logs();\n      this.fetch_logs();\n      this.process_api_data();\n    },\n    clear_logs() {\n      this.visits = [];\n    },\n    fetch_logs() {\n      axios.get('https://localhost:5001/FetchEvents/%7B%22session_token%22:%22601bc973-da4d-47cc-b3eb-4eb7c921bc48%22%7D')\n        .then(response => this.api_data = response.data.events)\n        .catch(error => console.log(error));\n    },\n    process_api_data() {\n      // NEW IMPLEMENTATION\n\n      for (let i = 0; i < this.api_data.length; i++) {\n        var last_event = null;\n        var events = null;\n\n        while (last_event.visit_id === current_event.visit_id || i == 0) {\n\n          var current_date = new Date(this.api_data[i].time);\n          var current_since_last = new Date(this.api_data[i].time_since_last);\n\n          var current_event = Event(\n            this.api_data[i].event_type,\n            current_date,\n            current_since_last.getMinutes()\n          );\n\n          events.unshift(current_event);\n\n          last_event = current_event;\n\n          i++;\n        }\n\n        var state = \"\";\n        if (events.length < 4) {\n          state = \"incomplete\";\n        }\n        else if (events.length == 4) {\n          state = \"complete\";\n        }\n        else if (this.api_data.length === i && this.api_data[i].event_type !== \"arrived_at_bed\") {\n          state = \"in_progress\";\n        }\n        else {\n          console.log(\"More than 4 events in visit\");\n        }\n\n        var duration = events[1].datetime.getTime() - events[events.length].datetime.getTime();\n        var duration_date = new Date(duration);\n        var duration_minutes = duration_date.getTime() / 1000 / 60;\n\n        var current_visit = new Visit(\n          state,\n          events[0].visit_id,\n          events[0].date,\n          state,\n          duration_minutes,\n          events\n        );\n\n        this.visits.unshift(current_visit);\n\n        events = [];\n      }\n\n      /*\n      for (let i = 0; i < this.api_data.length; i++) {\n        // Initialisation\n        var last_event = null;\n        if (i > 0) {\n          last_event = this.api_data[i-1];\n        }\n        var current_event = this.api_data[i];\n\n        // Per visit loop\n        var current_visit = [];\n        while (current_event.visit_id !== last_event.visit_id) {\n          \n        }\n      }\n      */\n      \n      /*\n      // var current_visit_id = 0;\n      for (let i = 0; i < this.api_data.length; i++) {\n        // Initialisation\n        var last_event = null;\n        if (i > 0) {\n          last_event = this.api_data[i-1];\n        }\n        var current_event = this.api_data[i];\n\n        // if (current_event.visit_id !== last_event.visit_id) {\n        //   current_visit_id++;\n        // }\n\n        // Processing\n        var current_event_type = current_event.event_type;\n        //console.log(new_event_type);\n\n        // first timestamp\n        // for absolute date and time\n        var current_date_str = current_event.time;\n        var date_obj = new Date(current_date_str);\n        //console.log(\"This is the date: \" + date_obj.toLocaleDateString('da-DK'));\n\n        var current_date = date_obj.toLocaleDateString('da-DK');\n        //console.log(new_date);\n\n        var current_timestamp = date_obj.toLocaleTimeString('da-DK');\n        //console.log(new_timestamp);\n\n        // second timestamp\n        // for the relative time since last event\n        // ACTUAL CODE var since_last_date_str = current_event.time;\n        // ACTUAL CODE var since_last_date_obj = new Date(since_last_date_str);\n        //console.log(\"Since last time: \" + since_last_date_obj);\n\n        // compute time since last event.\n        \n        // last timestamp\n        // for relative time later\n        \n        var current_time_since_last_event = \"-\";\n        if (i > 0) {\n          var last_date_obj = new Date(last_event.time);\n          //console.log(last_date_obj.getMinutes());\n          // ACTUAL CODE\n          // new_time_since_last_event = date_obj.getMinutes() - last_date_obj.getMinutes();\n          //TEST CODE\n          current_time_since_last_event = last_date_obj.getMinutes();\n        }\n        //console.log(new_time_since_last_event);\n\n        this.events.unshift({\n          event_type: current_event_type,\n          date: current_date,\n          timestamp: current_timestamp,\n          time_since_last_event: current_time_since_last_event\n        });\n      }\n      */\n    }\n  },\n  mounted() {\n    this.fetch_logs();\n    this.process_api_data();\n  },\n};\n</script>\n\n<style>\n#table {\n  height: 100%;\n  flex-grow: 2;\n  padding: 0px 200px;\n  text-align: left;\n  color: #F6F6F6;\n  position: absolute;\n  margin-left: 200px;\n}\nbutton {\n  margin: 30px 10px 20px 0px;\n  padding: 10px 15px;\n  border-style: none;\n}\ntable > td {\n  padding: 5px;\n}\n</style>"]}]}